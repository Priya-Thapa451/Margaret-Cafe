generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@localhost:3306/fyp"
}

model User {
  id                 Int      @id @default(autoincrement())
  email              String   @unique
  name               String?
  password           String
  role               Role     @default(USER)
  isVerified        Boolean  @default(false)
  verificationToken String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  resetPasswordToken String?  
  resetPasswordTokenExpiry DateTime? 
  menus              Menu[]    // This is the correct relation field
  orders             Order[]   // Orders placed by the user
  staff              Staff?
  isAdmin            Boolean  @default(false)  // Admin flag
}

model Staff {
  id       Int    @id @default(autoincrement())
  name     String
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @unique
}

model Admin {
  id       Int   @id @default(autoincrement())
  email    String   @unique
  name     String?
  password String
}



model Order {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  menu      Menu    @relation(fields: [menuId], references: [id])
  menuId    String  // Change to String to match Menu.id type
  total     Float
  status    String?
}

model Menu {
  id            String        @id @default(uuid())
  name          String
  description   String?
  price         Float
  category      MenuCategory
  available     Boolean       @default(true)
  imageUrl      String?
  orders        Order[]       // Add this field to define the inverse relation from Menu to Order
  users         User[]        // Add this field to define the inverse relation from Menu to User
}

enum MenuCategory {
  APPETIZER
  MAIN_COURSE
  DESSERT
  BEVERAGE
}

enum Role {
  USER
  STAFF
}
